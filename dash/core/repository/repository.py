import sqlite3
from django.db import connections
from dash.core.helpers.utils import dictfetchall


class Repository():
    ''' Funções sql para reutilização no projeto '''
    
    def __init__(self):
        pass

    def fetch_all_data(self, table=None):
        ''' Função para buscar todos os dados da tabela instanciada '''

        with connections["default"].cursor() as cursor:
            _sql = f"""SELECT * FROM {table}"""
            cursor.execute(_sql)
            data = dictfetchall(cursor)

        return data if data else None
    
    def insert_data(self, table=None, columns=None, values=None):
        ''' Função para inserir dados na tabela instanciada '''

        with connections["default"].cursor() as cursor:
            _sql = f"""insert into {table} {tuple(columns)} values {tuple(values)}"""
            cursor.execute(_sql)

    def clean_database(self, table=None):
        ''' Função para limpar todos os dados e resetar a key da tabela instanciada
            para receber novos dados do arquivo csv
        '''

        with connections["default"].cursor() as cursor:
            _sql_delete = f""" DELETE FROM {table} """
            cursor.execute(_sql_delete)
            _sql_reset_key = f""" UPDATE SQLITE_SEQUENCE SET SEQ=0 WHERE NAME='{table}'"""
            cursor.execute(_sql_reset_key)
    
    def update_record(self, table=None, column=None, pk=None, value=None):
        ''' Função para atualizar registro de uma tabela instanciada
        '''
        with connections["default"].cursor() as cursor:
            _sql = f"""UPDATE {table} SET {column} = '{value}' WHERE id = {pk} """
            print('sql....: ', _sql)
            cursor.execute(_sql)

    
    def create_table_if_not_exist(self):
        ''' Cria a tabela principal, caso nao exista '''
        
        connection_obj = sqlite3.connect('db.sqlite3')
        cursor_obj = connection_obj.cursor()

        sql = """
            CREATE TABLE IF NOT EXISTS asset_vulnerability (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                hostname VARCHAR(250),
                ip_addres VARCHAR(50),
                title VARCHAR(500),
                severity VARCHAR(250),
                cvss VARCHAR(10),
                publication_date DATE,
                status VARCHAR(50)
            )
            """

        cursor_obj.execute(sql)
        connection_obj.commit()
        cursor_obj.fetchall()
